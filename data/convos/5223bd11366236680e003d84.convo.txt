idRef {
  id: "5223bd11366236680e003d84"
}
ui_name: "A2S05-Kali"
nodes {
  idRef {
    id: "5223bd16366236680e003d8a"
  }
  index: 0
  text: "I\'m a bit busy. What do you need?"
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724da36434311639fc5148"
  }
  index: 1
  text: ""
  branches {
    responseText: "How is business?"
    nextNodeIndex: 2
    onlyOnce: true
    idRef {
      id: "5223be42366236680e003dac"
    }
  }
  branches {
    responseText: "Why did you name your business Antumbra Enterprises?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "heardAboutAE"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Dependent Story Variable (bool)"
            args {
              call_value {
                functionName: "Get Previous Story Variable (bool)"
                args {
                  string_value: "51f7429764343188990041a8"
                }
                args {
                  string_value: "A1_Bool_SidedWithKali"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
    }
    nextNodeIndex: 3
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53af1eaf366236b81b004e01"
    }
  }
  branches {
    responseText: "Why did you name your business Antumbra Enterprises?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Variable (bool)"
            args {
              string_value: "heardAboutAE"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 1
            }
          }
        }
      }
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Dependent Story Variable (bool)"
            args {
              call_value {
                functionName: "Get Previous Story Variable (bool)"
                args {
                  string_value: "51f7429764343188990041a8"
                }
                args {
                  string_value: "A1_Bool_SidedWithKali"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
    }
    nextNodeIndex: 4
    hideIfUnavailable: true
    onlyOnce: true
    idRef {
      id: "53af1eaf366236b81b004e01"
    }
  }
  branches {
    responseText: "Can I record a demo with you?"
    conditions {
      ops {
        functionName: "Get Dependent Story Variable (bool)"
        args {
          call_value {
            functionName: "Get Previous Story Variable (bool)"
            args {
              string_value: "51f7429764343188990041a8"
            }
            args {
              string_value: "A1_Bool_SidedWithKali"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "RecordingQuestStage"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Demo Deck"
            }
          }
        }
      }
    }
    nextNodeIndex: 6
    hideIfUnavailable: true
  }
  branches {
    responseText: "Can I record a demo with you?"
    conditions {
      ops {
        functionName: "Comparison (bool)"
        args {
          call_value {
            functionName: "Get Dependent Story Variable (bool)"
            args {
              call_value {
                functionName: "Get Previous Story Variable (bool)"
                args {
                  string_value: "51f7429764343188990041a8"
                }
                args {
                  string_value: "A1_Bool_SidedWithKali"
                }
              }
            }
            args {
              call_value {
                functionName: "Get Preset Value (int)"
                args {
                  string_value: "bool"
                }
                args {
                  int_value: 0
                }
              }
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "IsOrIsNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "bool"
            }
            args {
              int_value: 0
            }
          }
        }
      }
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "RecordingQuestStage"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 0
        }
      }
      ops {
        functionName: "Evaluate If Actor Has Item"
        args {
          call_value {
            functionName: "Specific Actor"
            args {
              call_value {
                functionName: "Triggering Actor"
              }
            }
            args {
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "HasOrHasNot"
            }
            args {
              int_value: 1
            }
          }
        }
        args {
          call_value {
            functionName: "Get Map Item (Item)"
            args {
              string_value: "Demo Deck"
            }
          }
        }
      }
    }
    nextNodeIndex: 9
    hideIfUnavailable: true
  }
  branches {
    responseText: "I\342\200\231m done working on my track."
    conditions {
      ops {
        functionName: "Comparison (int)"
        args {
          call_value {
            functionName: "Get Variable (int)"
            args {
              string_value: "RecordingQuestStage"
            }
          }
        }
        args {
          call_value {
            functionName: "Get Preset Value (int)"
            args {
              string_value: "Comparison Ops"
            }
            args {
              int_value: 0
            }
          }
        }
        args {
          int_value: 1
        }
      }
    }
    nextNodeIndex: 10
    hideIfUnavailable: true
  }
  branches {
    responseText: "That\'s all."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724da96434311639fc5151"
  }
  index: 2
  text: "Getting better every day, but it\'s a constant struggle. As our resources grow bigger, so do the demands of Saito. Fortunately, now that most of the local megacorps have gotten a taste of Eclipse, they won\'t tolerate Saito getting rid of us. I\'m looking forward to the day when I\'ll be free of his grasp and can run Antumbra Enterprises without looking over my shoulder."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "heardAboutAE"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53af1f19366236b81b004e05"
  }
  index: 3
  text: "That nightclub wasn\'t the start of my career, but it marked the start of my climb up the corporate ladder. Up until that Site of Power emerged, Mitsuhama thought I was just another minx in their portfolio, useful for drawing in eyeballs.\n\nAfter you helped me clear the Site and turn it over to them, they started involving me in the decision-making process. Without Antumbra, I\'d just be another singer. With it, I\'m becoming a force to be reckoned with."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53af20cd366236b81b004e34"
  }
  index: 4
  text: "My first nightclub in Seattle was an... unfortunate experience, but a formative one. At the time, I was furious about how events had turned out.\n\nIn retrospect, however, I have come to understand that it was all for the best. If the club had continued, I might still be slumming it in Everett, booking singers and trying to convince artists to sign with my label. Its failure forced me to flee to CalFree, and here I\'ve found opportunities far bigger than those I left behind."
  branches {
    responseText: ""
    nextNodeIndex: 5
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53af214c366236b81b004e37"
  }
  index: 5
  text: "Antumbra is a warning to myself to be paranoid at all times. You never know who is going to stab you in the back.\n\nAt the same time, Antumbra is also a reminder that failure is a part of life. We must embrace our mistakes, learn what we can from them, and rise again."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724db16434311639fc516c"
  }
  index: 6
  text: "Hm, I suppose I do still owe you a favor from before."
  branches {
    responseText: ""
    nextNodeIndex: 7
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724db16434311639fc516f"
  }
  index: 7
  text: "Before we can start recording, I\342\200\231ll need to know where we\342\200\231re going with this. What kind of music do you want to perform?"
  branches {
    responseText: "Chromatic Metal."
    actions {
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "5215664d3662365c180018bf"
            }
            args {
              string_value: "A2_RecordingGenre"
            }
          }
        }
        args {
          string_value: "chromatic metal"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: "Coruscat."
    actions {
      ops {
        functionName: "No Effect"
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "5215664d3662365c180018bf"
            }
            args {
              string_value: "A2_RecordingGenre"
            }
          }
        }
        args {
          string_value: "coruscat"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: "Glitch Punk."
    actions {
      ops {
        functionName: "No Effect"
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "5215664d3662365c180018bf"
            }
            args {
              string_value: "A2_RecordingGenre"
            }
          }
        }
        args {
          string_value: "glitch punk"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: "Thrumming."
    actions {
      ops {
        functionName: "No Effect"
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "5215664d3662365c180018bf"
            }
            args {
              string_value: "A2_RecordingGenre"
            }
          }
        }
        args {
          string_value: "thrumming"
        }
      }
    }
    nextNodeIndex: 8
    auxiliaryLink: true
  }
  branches {
    responseText: "Toxic House."
    actions {
      ops {
        functionName: "No Effect"
      }
      ops {
        functionName: "Set Variable (string)"
        args {
          call_value {
            functionName: "Get Story Variable (string)"
            args {
              string_value: "5215664d3662365c180018bf"
            }
            args {
              string_value: "A2_RecordingGenre"
            }
          }
        }
        args {
          string_value: "toxic house"
        }
      }
    }
    nextNodeIndex: 8
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724db16434311639fc517e"
  }
  index: 8
  text: "Cool. Let\342\200\231s step into the studio."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "StartRecording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "53724db56434311639fc5187"
  }
  index: 9
  text: "Really? Well, I suppose I don\342\200\231t have much choice. I\342\200\231d promised to help with whatever you need. I hadn\342\200\231t expected you to need my recording expertise, though."
  branches {
    responseText: ""
    nextNodeIndex: 7
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "53724db86434311639fc5190"
  }
  index: 10
  text: "All right, I\342\200\231ll take over from here. We\342\200\231ll release to local markets first, and if it does well, Antumbra Global will start promoting it across UCAS, NAN, Aztlan, and other regions.\n\nGood luck to us both. I hope this earns a lot of nuyen!"
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "RecordingQuestStage"
          }
        }
      }
      args {
        int_value: 2
      }
    }
    ops {
      functionName: "Remove Item from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Item)"
          args {
            string_value: "Demo Deck"
          }
        }
      }
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Triggering Actor"
            }
          }
          args {
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Story Variable (bool)"
          args {
            string_value: "5215664d3662365c180018bf"
          }
          args {
            string_value: "A2_FinishedDemo"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Clear Waypoint from Actor"
      args {
        call_value {
          functionName: "Get Map Item (Actor)"
          args {
            string_value: "5223a317366236680e003a06"
          }
        }
      }
    }
    ops {
      functionName: "Set Goal Status"
      args {
        call_value {
          functionName: "Get Map Item (Goal)"
          args {
            string_value: "Record a demo"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "GoalStatus"
          }
          args {
            int_value: 2
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "WithOrWithout"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
}
nodes {
  idRef {
    id: "5223c15e366236680e003ddc"
  }
  index: 11
  text: "Not too bad for a newbie. Here\342\200\231s the deck back with your track on it. I can take it now if you\342\200\231re ready to release it, or you can take some more time to polish it. You might want to check in with some other people here if you\342\200\231d like help finishing it up."
  branches {
    responseText: ""
    nextNodeIndex: 1
    auxiliaryLink: true
  }
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Variable (int)"
          args {
            string_value: "RecordingQuestStage"
          }
        }
      }
      args {
        int_value: 1
      }
    }
    ops {
      functionName: "Set Variable (int)"
      args {
        call_value {
          functionName: "Get Story Variable (int)"
          args {
            string_value: "5215664d3662365c180018bf"
          }
          args {
            string_value: "A2_DemoQuality"
          }
        }
      }
      args {
        int_value: 1000
      }
    }
  }
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "StartRecording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "StartRecording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "StartRecording"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 11
}
