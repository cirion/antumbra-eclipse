idRef {
  id: "5223a378366236680e003a08"
}
ui_name: "A2S05-Johnson"
nodes {
  idRef {
    id: "5223a384366236680e003a0e"
  }
  index: 0
  text: "So, let me get this straight. The Aztechnology job was interrupted by some giant troll, who nobody saw enter or leave the building but you. He said something about Norton before disappearing.\n\nAccording to the metahumans in this city, Norton is in Colma. Hm, that\342\200\231s a complication. Colma is a ways south of San Francisco. It\342\200\231s part of the Bay Area Sprawl, but there\342\200\231s very little corp presence there."
  branches {
    responseText: ""
    nextNodeIndex: 1
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5223a6d3366236680e003a11"
  }
  index: 1
  text: "You\342\200\231ve had a long day. Why don\342\200\231t you get some sleep? I\342\200\231ll check with my superiors and see how they want to proceed.\n\nHere\342\200\231s a partial payment. I know the Aztechnology job wasn\342\200\231t finished, but I appreciate your efforts. We\342\200\231d be in much worse shape without you."
  nodeType: ConversationNodeType_Simple
  actions {
    ops {
      functionName: "Add Nuyen"
      args {
        int_value: 1000
      }
    }
    ops {
      functionName: "Add Actor Karma"
      args {
        call_value {
          functionName: "Specific Actor"
          args {
            call_value {
              functionName: "Get Map Item (Player)"
              args {
                int_value: 0
              }
            }
          }
          args {
          }
        }
      }
      args {
        int_value: 7
      }
    }
  }
}
nodes {
  idRef {
    id: "5223a727366236680e003a14"
  }
  index: 2
  text: "Sorry, no word yet from upstairs. Take a break, why don\342\200\231t you? You look awful, if you don\342\200\231t mind me saying so."
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5223a768366236680e003a17"
  }
  index: 3
  text: "Ah, good morning! You\342\200\231re certainly looking chipper. That\342\200\231s good, because we\342\200\231ll need you at your best.\n\nAs you may have learned from your own legwork, Colma is a necropolis. Nobody has bothered developing it recently since, well, the dead are traditionally lousy spenders."
  branches {
    responseText: ""
    nextNodeIndex: 4
  }
  nodeType: ConversationNodeType_Simple
}
nodes {
  idRef {
    id: "5223a787366236680e003a1a"
  }
  index: 4
  text: "When you think about it, that makes it the perfect place for people to gather if they don\342\200\231t want to be noticed. No corp security, no Imperial marines... it\342\200\231s about as quiet a place as you can get.\n\nYou\342\200\231re the only one who\342\200\231s actually seen this troll, so I need you to head down to Colma and check it out. You\342\200\231ll probably want to bring another runner with you, so pick someone dependable."
  branches {
    responseText: ""
    nextNodeIndex: 5
  }
}
nodes {
  idRef {
    id: "5223a798366236680e003a1d"
  }
  index: 5
  text: "Are you ready to go?"
  branches {
    responseText: "Let\'s go. {{GM}}Travel to Colma.{{/GM}}"
    actions {
      ops {
        functionName: "Open Scene"
        args {
          call_value {
            functionName: "Get Map Item (Scene)"
            args {
              string_value: "Colma"
            }
          }
        }
      }
    }
    nextNodeIndex: -1
  }
  branches {
    responseText: "Not yet."
    nextNodeIndex: -1
  }
  nodeType: ConversationNodeType_Simple
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 0
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Slept"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  nextNodeIndex: 2
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "Slept"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 0
          }
        }
      }
    }
  }
  actions {
    ops {
      functionName: "Set Variable (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 3
}
roots {
  responseText: ""
  conditions {
    ops {
      functionName: "Comparison (bool)"
      args {
        call_value {
          functionName: "Get Variable (bool)"
          args {
            string_value: "TalkedToJohnson2"
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "IsOrIsNot"
          }
          args {
            int_value: 1
          }
        }
      }
      args {
        call_value {
          functionName: "Get Preset Value (int)"
          args {
            string_value: "bool"
          }
          args {
            int_value: 1
          }
        }
      }
    }
  }
  nextNodeIndex: 5
  auxiliaryLink: true
}
